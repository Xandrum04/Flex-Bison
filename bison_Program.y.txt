%{
  /* DEFINITIONS */


%}

  /* BISON DECLARATIONS */


$token PUBLIC PRIVATE CLASS INT CHAR DOUBLE BOOLEAN STRING VOID IF ELSE WHILE DO FOR SWITCH CASE DEFAULT BREAK TRUE FALSE RETURN IDENTIFIER NUMBER STRING_LITERAL


%%
  /* RULES / BNF */


PROGRAM: STATEMENTS;

STATEMENTS : STATEMENTS                { printf("Statement\n"); }
           | STATEMENTS  STATEMENTS    { printf("Statements\n"); }
           ;
STATEMENT : STATEMENT_IF               { printf("Statement IF\n"); }
          | STATEMENT_WHILE            { printf("Statement WHILE\n"); }
          | STATEMENT_ASSIGN           { printf("Statement ASSIGN\n"); }
          | STATEMENT_SWITCH           { printf("Statement SWITCH\n"); }
          | STATEMENT_RETURN           { printf("Statement RETURN\n"); }
          | STATEMENT_CLASS            { printf("Statement CLASS\n"); }
          | VARIABLE_DECLARATION       { printf("Statement VARIABLE DECLARATION\n"); }
          | METHOD_DECLARATION         { printf("Statement METHOD DECLARATION\n"); }
          | STATEMENT_DO_WHILE         { printf("Statement DO WHILE \n"); }
          | STATEMENT_FOR              { printf("Statement FOR\n"); }
          | STATEMENT_PRINT            { printf("Statement PRINT\n"); }
          | CREATE_CLASS_OBJECT        { printf("Statement OBJECT\n"); }
          | STATEMENT_BREAK            { printf("Statement BREAK\n"); }
          | COMMENTS                   { printf("Comment COMMENTS \n"); } 
          ;

STATEMENT_IF: IF LPAREN CONDITION RPAREN LBRACE STATEMENTS RBRACE
            | IF LPAREN CONDITION RPAREN STATEMENTS STATEMENT_ELSE_IF ELSE LBRACE
              STATEMENTS RBRACE;

STATEMENT_ELSE_IF: ELSE_IF LPAREN CONDITION RPAREN LBRACE STATEMENTS RBRACE
                 | LPAREN CONDITION RPAREN LBRACE STATEMENTS RBRACE STATEMENT_ELSE_IF;

STATEMENT_WHILE: WHILE LPAREN CONDITION RPAREN LBRACE STATEMENTS RBRACE;

STATEMENT_BREAK: BREAK SEMICOLON;

STATEMENT_ASSIGN: VARIABLE EQUALS EXPRESSION SEMICOLON;

STATEMENT_SWITCH: SWITCH LPAREN EXPRESSION RPAREN SWITCH_BODY;

SWITCH_BODY: CASE EXPRESSION COLON STATEMENT
           | CASE EXPRESSION COLON STATEMENT DEFAULT COLON STATEMENT
           | CASE EXPRESSION COLON STATEMENT SWITCH_BODY
           ;

STATEMENT_RETURN: RETURN EXPRESSION SEMICOLON;

STATEMENT_CLASS: ACCESS_MODIFIER CLASS CLASS_IDENTIFIER LBRACE






%%


 /* CODE */
int main(int argc, char* argv[]){

if (argc < 2) {
        fprintf(stderr, "Usage: %s <input_file>\n", argv[0]);
        return 1;
    }

    yyin = fopen(argv[1], "r");
    if (!yyin) {
        fprintf(stderr, "Error opening file %s\n", argv[1]);
        return 1;
    }

    yyparse();

    fclose(yyin);
    return 0;

}
 



